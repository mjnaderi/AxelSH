#!/bin/bash
# AxelSH
# By Mohammad Javad Naderi <mjnaderi@gmail.com>
# usage: axelsh [-s MAX-SPEED(B/s)] LINKS_FILE OUTPUT_DIR
#     or axelsh [-s MAX-SPEED(B/s)] --single LINK [OUTPUT_DIR]

trap "exit 1" SIGINT SIGTERM

#if ! [ -f "./axel/axel" ]; then
#	echo "Axel Not Found in \"./axel/axel\". Maybe you have not compiled it yet..."
#	exit 10
#fi

speed=""
if [ "$1" = "-s" ]; then
    speed="-s $2"
    shift
    shift
fi

if [ "$1" = "--single" ]; then
	link="$2"
	if [ "$3" != "" ]; then
		OUT="$3"
	fi
	axelshcmd "$speed" "$link" -o "$OUT" | dialog --no-mouse --no-collapse --title "AxelSH" --gauge "Please Wait" 16 70 0
	EC="${PIPESTATUS[0]}"
	if [ "$EC" == 42 ]; then
		echo "Download Finished"
		exit 0
	else
		echo "Download Failed"
		exit 1
	fi
fi

LINKS_FILE=$1
OUT=$2

NOTIFY=true # notify about finishing downloads or not

# functions mk_dlg and parge_dlg from http://www.pclinuxos.com/forum/index.php?topic=59050.0
function mk_dlg()
{
	N=$1
	shift
	export MAIN_DIALOG="
		<window title=\"$1\" resizable=\"false\" icon-name=\"computer\">
		<vbox>
		<text use-markup=\"true\">
			<label>$2</label>
		</text>
		<hbox>"`
			shift
			shift
			for((i=0; i<N; i++)); do
				echo "<button>
					<label>$1</label>
					<action type=\"exit\">$2</action>
				</button>";
				shift
				shift
			done
		`"</hbox>
		</vbox>
		</window>
	"
}


function parse_dlg() {
	I=$IFS; IFS=""
	for STATEMENT in  $(gtkdialog --center --program=MAIN_DIALOG); do
		eval $STATEMENT
	done
	IFS=$I
	echo $EXIT
}


# Main
# Main Loop
while [ `wc -c "$LINKS_FILE" | awk '{print $1}'` != "0" ]; do
	link=`head -1 "$LINKS_FILE"`

	if [ "$link" == "" ]; then
		# remove first line from LINKS_FILE
		tail -n +2 "$LINKS_FILE" > axeltmp && mv axeltmp "$LINKS_FILE"
		continue
	fi

	axelshcmd "$speed" "$link" -o "$OUT" | dialog --no-mouse --no-collapse --title "AxelSH" --gauge "Please Wait" 16 70 0
	EC="${PIPESTATUS[0]}"


	# if download finished
	if [ "$EC" == 42 ]; then
		# add link to done files
		echo "$link" >> "${LINKS_FILE}.done"
		if $NOTIFY; then
			# You can uncomment this line to also use notify-send for notification
			#notify-send -t 5000 "Download of $link Finished!"
			(
				mk_dlg 2 "AxelSH: Download Finished" "Download of $link Finished!" "Open Folder" open "OK" ok
				ans=`parse_dlg`
				if [ $ans == "open" ]; then
					xdg-open $OUT
				fi
			) &>/dev/null &
		fi
	# else if download failed
	else
		# add link to failed files
		echo "$link" >> "${LINKS_FILE}.failed"
		if $NOTIFY; then
			# You can uncomment this line to also use notify-send for notification
			#notify-send -t 5000 "Download of $link Finished!"
			(
				mk_dlg 2 "AxelSH: Download Failed" "Download of $link failed! Maybe it is already downloaded. Or the download is interrupted" "Open Folder" open "OK" ok
				ans=`parse_dlg`
				if [ $ans == "open" ]; then
					xdg-open $OUT
				fi
			) &>/dev/null &
		fi
	fi

	# remove first line of LINKS_FILE
	tail -n +2 "$LINKS_FILE" > axeltmp && mv axeltmp "$LINKS_FILE"

done
echo -e "\nDownloads Finished"
